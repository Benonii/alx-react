{"ast":null,"code":"var _jsxFileName = \"/home/benoni/Desktop/ALX/alx-react/0x02-react_props/task_4/dashboard/src/CourseList/CourseListRow.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CourseListRow() {\n  let isHeader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let textFirstCell = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let textSecondCell = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let tr;\n  if (isHeader) {\n    tr = textSecondCell !== null ? /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: textFirstCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"th\", {\n      colSpan: 2,\n      children: textFirstCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  } else {\n    tr = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: textFirstCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: textSecondCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: tr\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n_c = CourseListRow;\nCourseListRow.propTypes = {\n  isHeader: PropTypes.bool,\n  textFirstCell: PropTypes.string.isRequired,\n  textSecondCell: PropTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"CourseListRow\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseListRow","isHeader","arguments","length","undefined","textFirstCell","textSecondCell","tr","children","fileName","_jsxFileName","lineNumber","columnNumber","colSpan","_c","propTypes","bool","string","isRequired","$RefreshReg$"],"sources":["/home/benoni/Desktop/ALX/alx-react/0x02-react_props/task_4/dashboard/src/CourseList/CourseListRow.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nexport default function CourseListRow(isHeader=false, textFirstCell=\"\", textSecondCell=null) {\n    let tr;\n\n    if (isHeader) {\n      tr = textSecondCell !== null ? (\n            <tr>\n                <th>{textFirstCell}</th>\n                <th>{textSecondCell}</th> \n            </tr>\n            ) : (\n\n        <th colSpan={2}>{textFirstCell}</th>\n        );\n    } else {\n        tr = (\n            <>\n                <td>{textFirstCell}</td>\n                <td>{textSecondCell}</td>\n            </>\n        )\n    };\n\n    return <tr>{tr}</tr>\n}\n\nCourseListRow.propTypes = {\n    isHeader: PropTypes.bool,\n    textFirstCell: PropTypes.string.isRequired,\n    textSecondCell: PropTypes.string,\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGnC,eAAe,SAASC,aAAaA,CAAA,EAAwD;EAAA,IAAvDC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,KAAK;EAAA,IAAEG,aAAa,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,EAAE;EAAA,IAAEI,cAAc,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,IAAI;EACvF,IAAIK,EAAE;EAEN,IAAIN,QAAQ,EAAE;IACZM,EAAE,GAAGD,cAAc,KAAK,IAAI,gBACtBT,OAAA;MAAAW,QAAA,gBACIX,OAAA;QAAAW,QAAA,EAAKH;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBf,OAAA;QAAAW,QAAA,EAAKF;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,gBAGTf,OAAA;MAAIgB,OAAO,EAAE,CAAE;MAAAL,QAAA,EAAEH;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAClC;EACL,CAAC,MAAM;IACHL,EAAE,gBACEV,OAAA,CAAAE,SAAA;MAAAS,QAAA,gBACIX,OAAA;QAAAW,QAAA,EAAKH;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBf,OAAA;QAAAW,QAAA,EAAKF;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eAC3B,CACL;EACL;EAAC;EAED,oBAAOf,OAAA;IAAAW,QAAA,EAAKD;EAAE;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACxB;AAACE,EAAA,GAvBuBd,aAAa;AAyBrCA,aAAa,CAACe,SAAS,GAAG;EACtBd,QAAQ,EAAEN,SAAS,CAACqB,IAAI;EACxBX,aAAa,EAAEV,SAAS,CAACsB,MAAM,CAACC,UAAU;EAC1CZ,cAAc,EAAEX,SAAS,CAACsB;AAC9B,CAAC;AAAA,IAAAH,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}