import React from 'react';
import { Action, Dispatch } from 'redux';
import { LiftedState, Monitor } from '@redux-devtools/core';
import { DockMonitorAction } from './actions';
import { DockMonitorState } from './reducers';
interface ExternalProps<S, A extends Action<string>> {
    defaultPosition: 'left' | 'top' | 'right' | 'bottom';
    defaultIsVisible: boolean;
    defaultSize: number;
    toggleVisibilityKey: string;
    changePositionKey: string;
    changeMonitorKey?: string;
    fluid: boolean;
    dispatch: Dispatch<DockMonitorAction>;
    children: Monitor<S, A, LiftedState<S, A, unknown>, unknown, Action<string>> | Monitor<S, A, LiftedState<S, A, unknown>, unknown, Action<string>>[];
}
interface DefaultProps {
    defaultIsVisible: boolean;
    defaultPosition: 'left' | 'top' | 'right' | 'bottom';
    defaultSize: number;
    fluid: boolean;
}
export interface DockMonitorProps<S, A extends Action<string>> extends LiftedState<S, A, DockMonitorState> {
    defaultPosition: 'left' | 'top' | 'right' | 'bottom';
    defaultIsVisible: boolean;
    defaultSize: number;
    toggleVisibilityKey: string;
    changePositionKey: string;
    changeMonitorKey?: string;
    fluid: boolean;
    dispatch: Dispatch<DockMonitorAction>;
    children: Monitor<S, A, LiftedState<S, A, unknown>, unknown, Action<string>> | Monitor<S, A, LiftedState<S, A, unknown>, unknown, Action<string>>[];
}
declare const _default: React.ComponentType<ExternalProps<unknown, Action<string>>> & {
    update(monitorProps: ExternalProps<unknown, Action<string>>, state: DockMonitorState | undefined, action: DockMonitorAction): DockMonitorState;
    defaultProps: DefaultProps;
};
export default _default;
