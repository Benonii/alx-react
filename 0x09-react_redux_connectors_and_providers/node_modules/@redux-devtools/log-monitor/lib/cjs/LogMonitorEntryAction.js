"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactJsonTree = require("react-json-tree");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const styles = {
  actionBar: {
    paddingTop: 8,
    paddingBottom: 7,
    paddingLeft: 16
  },
  payload: {
    margin: 0,
    paddingLeft: 16,
    overflow: 'auto'
  }
};
class LogMonitorAction extends _react.Component {
  renderPayload(payload) {
    return /*#__PURE__*/_react.default.createElement("div", {
      style: {
        ...styles.payload,
        backgroundColor: this.props.theme.base00
      }
    }, Object.keys(payload).length > 0 ? /*#__PURE__*/_react.default.createElement(_reactJsonTree.JSONTree, {
      theme: this.props.theme,
      invertTheme: false,
      keyPath: ['action'],
      data: payload,
      shouldExpandNodeInitially: this.shouldExpandNodeInitially
    }) : '');
  }
  shouldExpandNodeInitially = (keyPath, data, level) => {
    return this.props.expandActionRoot && level === 0;
  };
  render() {
    const {
      type,
      ...payload
    } = this.props.action;
    return /*#__PURE__*/_react.default.createElement("div", {
      style: {
        backgroundColor: this.props.theme.base02,
        color: this.props.theme.base06,
        ...this.props.style
      }
    }, /*#__PURE__*/_react.default.createElement("div", {
      style: styles.actionBar,
      onClick: this.props.onClick
    }, type !== null && type.toString()), !this.props.collapsed ? this.renderPayload(payload) : '');
  }
}
exports.default = LogMonitorAction;