import React from 'react';
import { Action, Dispatch } from 'redux';
import { base16Themes } from 'react-base16-styling';
import type { Base16Theme } from 'react-base16-styling';
import { LiftedAction, LiftedState } from '@redux-devtools/core';
import { LogMonitorAction } from './actions';
import { LogMonitorState } from './reducers';
interface ExternalProps<S, A extends Action<string>> {
    dispatch: Dispatch<LogMonitorAction | LiftedAction<S, A, LogMonitorState>>;
    preserveScrollTop: boolean;
    select: (state: S) => unknown;
    theme: keyof typeof base16Themes | Base16Theme;
    expandActionRoot: boolean;
    expandStateRoot: boolean;
    markStateDiff: boolean;
    hideMainButtons?: boolean;
}
interface DefaultProps<S> {
    select: (state: unknown) => unknown;
    theme: keyof typeof base16Themes | Base16Theme;
    preserveScrollTop: boolean;
    expandActionRoot: boolean;
    expandStateRoot: boolean;
    markStateDiff: boolean;
}
export interface LogMonitorProps<S, A extends Action<string>> extends LiftedState<S, A, LogMonitorState> {
    dispatch: Dispatch<LogMonitorAction | LiftedAction<S, A, LogMonitorState>>;
    preserveScrollTop: boolean;
    select: (state: S) => unknown;
    theme: keyof typeof base16Themes | Base16Theme;
    expandActionRoot: boolean;
    expandStateRoot: boolean;
    markStateDiff: boolean;
    hideMainButtons?: boolean;
}
declare const _default: React.ComponentType<ExternalProps<unknown, Action<string>>> & {
    update(monitorProps: ExternalProps<unknown, Action<string>>, state: LogMonitorState | undefined, action: LogMonitorAction): LogMonitorState;
    defaultProps: DefaultProps<unknown>;
};
export default _default;
