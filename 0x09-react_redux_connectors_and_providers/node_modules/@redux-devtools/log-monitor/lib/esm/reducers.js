import { UPDATE_SCROLL_TOP, START_CONSECUTIVE_TOGGLE } from './actions';
function initialScrollTop(props) {
  let state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  let action = arguments.length > 2 ? arguments[2] : undefined;
  if (!props.preserveScrollTop) {
    return 0;
  }
  return action.type === UPDATE_SCROLL_TOP ? action.scrollTop : state;
}
function startConsecutiveToggle(props, state, action) {
  return action.type === START_CONSECUTIVE_TOGGLE ? action.id : state;
}
export default function reducer(props) {
  let state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  let action = arguments.length > 2 ? arguments[2] : undefined;
  return {
    initialScrollTop: initialScrollTop(props, state.initialScrollTop, action),
    consecutiveToggleStartId: startConsecutiveToggle(props, state.consecutiveToggleStartId, action)
  };
}